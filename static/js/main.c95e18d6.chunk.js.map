{"version":3,"sources":["Components/SearchBox.module.css","Components/Cards.module.css","Components/Cards.js","api/api.js","Components/SearchBox.js","index.js"],"names":["module","exports","Cards","data_cases","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","gridbox","Card","classes","CardContent","Typography","title","color","gutterBottom","variant","component","start","end","value","duration","separator","pos","Date","toDateString","fetchData","a","axios","get","data","modifiedData","console","log","SearchBox","key","state","countryData","fetchedData","this","setState","searchbox","label","placeholder","onSelect","record","inputBoxFontColor","dropDownHoverColor","date_time","now","date","format","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c95e18d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbox\":\"SearchBox_searchbox__3t8Yl\",\"label\":\"SearchBox_label__3-icY\",\"date_time\":\"SearchBox_date_time__2_3zm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2w2iu\",\"gridbox\":\"Cards_gridbox__vP6SC\",\"card\":\"Cards_card__2HLJG\"};","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport { Grid } from '@material-ui/core'; \r\n\r\nexport default function Cards({data_cases:{confirmed,recovered,deaths,lastUpdate}}) {\r\n  if(!confirmed){\r\n    return (<h1>Loading</h1>);\r\n  }\r\n  return (\r\n    <div className={styles.container}> \r\n      <Grid className={styles.gridbox}>\r\n        <Card className={styles.classes}>\r\n          <CardContent>\r\n            <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n              Confirmed Cases\r\n              </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.0}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.pos} color=\"textSecondary\">\r\n              Last Updated Time\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid className={styles.gridbox}>\r\n        <Card className={styles.classes}>\r\n          <CardContent>\r\n            <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n              Active Cases\r\n              </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value-recovered.value}\r\n                duration={2.0}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.pos} color=\"textSecondary\">\r\n              Last Updated Time\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid className={styles.gridbox}>\r\n        <Card className={styles.classes}>\r\n          <CardContent>\r\n            <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n              Recovered Cases\r\n              </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.0}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.pos} color=\"textSecondary\">\r\n              Last Updated Time\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid className={styles.gridbox}>\r\n        <Card className={styles.classes}>\r\n          <CardContent>\r\n            <Typography className={styles.classes} color=\"textSecondary\" gutterBottom>\r\n              Death Cases\r\n              </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.0}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography className={styles.pos} color=\"textSecondary\">\r\n              Last Updated Time\r\n              </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import axios from \"axios\";\r\n//const url = 'https://covid19.mathdro.id/api';\r\nconst url = \"https://covid19.mathdro.id/api/countries/india\";\r\nexport const fetchData = async () => {\r\n  let changeableUrl = url;\r\n  // if (country) {\r\n  //     changeableUrl = `${url}/countries/${country}`\r\n  // }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate }\r\n    } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n/*\r\nexport const fetchINDIA=async()=>{\r\n    const urlc=`${url}/countries/INDIA/confirmed` \r\n    try{\r\n        const {dataI}= await axios.get(urlc);\r\n        const IndiaData=dataI.map((dataconf)=>({\r\n            State: dataconf.provinceState,\r\n            confirmed: dataconf.confirmed,\r\n            recovered:dataconf.recovered,\r\n            deaths:dataconf.deaths,\r\n            active:dataconf.active\r\n            \r\n        }))\r\n        return IndiaData;\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchDailyData = async()=>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        })) \r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchCountries = async()=>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country )=>country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchCountry=async(country)=>{\r\n    let changeableUrl = url;\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}/confirmed`\r\n    }\r\n     try{\r\n        const {dataI}= await axios.get(changeableUrl);\r\n        const IndiaData=dataI.map((dataconf)=>({\r\n            State: dataconf.provinceState,\r\n            confirmed: dataconf.confirmed,\r\n            recovered:dataconf.recovered,\r\n            deaths:dataconf.deaths,\r\n            active:dataconf.active\r\n            \r\n        }))\r\n        return IndiaData;\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n*/\r\n","import React, { Component } from 'react'\r\nimport ReactSearchBox from 'react-search-box'\r\nimport styles from './SearchBox.module.css'; \r\nimport date from 'date-and-time';\r\nimport Cards from './Cards';\r\nimport {fetchData} from '../api/api';\r\n\r\nconst date_time =()=>{\r\n    const now = new Date();\r\n    const time_view=date.format(now, 'YYYY/MM/DD HH:mm:ss');\r\n    return time_view;    \r\n}\r\n\r\nexport default class SearchBox extends Component { \r\n    data = [\r\n        {\r\n            key: 'An',\r\n            value: 'Andhra Pradesh',\r\n        },\r\n        {\r\n            key: 'Ar',\r\n            value: 'Arunachal Pradesh',\r\n        },\r\n        {\r\n            key: 'As',\r\n            value: 'Assam',\r\n        },\r\n        {\r\n            key: 'Bi',\r\n            value: 'Bihar',\r\n        },\r\n        {\r\n            key: 'Ch',\r\n            value: 'Chhattisgarh',\r\n        },\r\n        {\r\n            key: 'Go',\r\n            value: 'Goa'\r\n        },\r\n        {\r\n            key: 'Gu',\r\n            value: 'Gujrat'\r\n        },\r\n        {\r\n            key: 'Ha',\r\n            value: 'Haryana'\r\n        },\r\n        {\r\n            key: 'Hi',\r\n            value: 'Himachal Pradesh'\r\n        }\r\n    ]\r\n    constructor(){\r\n        super()\r\n        this.state={\t\r\n            data_cases:{},\r\n            countryData:{},\r\n        }\r\n    }\r\n    async componentDidMount () {\r\n        const fetchedData = await fetchData();\r\n        // const indiaData=await fetchINDIA();\r\n        this.setState({\r\n            data_cases: fetchedData,\r\n            // countryData: indiaData\r\n        })\r\n    }\r\n    render() {\r\n        const {data_cases}=this.state;\r\n        return (\r\n            <div>\r\n            <div className = {styles.searchbox}>\r\n                <label className={styles.label}>Search your city</label>\r\n               <ReactSearchBox\r\n                placeholder=\"States\"\r\n                value=\"\"\r\n                data={this.data}\r\n                onSelect={record => console.log(record)}\r\n                inputBoxFontColor = \"Red\"\r\n                dropDownHoverColor = \"grey\"\r\n            /> \r\n            <label className={styles.date_time}>{date_time()}</label>\r\n\r\n            <Cards data_cases={data_cases} /> \r\n            {/* countryData={this.state.countryData}/> */}\r\n            </div>   \r\n            </div>\r\n        )\r\n    }\r\n    // reference: https://www.npmjs.com/package/react-search-box\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SearchBox from './Components/SearchBox';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SearchBox/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}